- extra_head_content do
  = include_javascripts :admin_position_page
  :javascript
    RecruitmentPlatform.Admin.QuestionEditor.setTemplate(#{render_nested_form(form, :position_questions, 'question_form').to_json});
    RecruitmentPlatform.Admin.ContactEmails.setTemplate(#{render_nested_form(form, :contact_emails, 'email_form').to_json})

= form.inputs 'About this Position' do
  = form.input :title, :label => 'Position Title'
  ~ form.input :short_description, :label => 'Short Description', :as => :text, :input_html => {:rows => 3}
  = form.input :team, :label => 'Team'

= form.inputs 'Contact Email Addresses', :id => 'contact-emails' do
  - form.object.contact_emails.build if form.object.contact_emails.empty?
  - offset = 0
  = form.fields_for :contact_emails do |ef|
    = partial 'email_form', :email_form => ef, :offset => (offset += 1)

= form.inputs 'Position Commitment' do
  = form.input :duration, :label => 'Position Duration', :hint => 'e.g. 6 months, 1 year, indefinite'
  = form.input :time_commitment, :label => 'Hours per week', :as => :select, :collection => Array(1..40).map { |v| [pluralize(v, "hour"), v.to_f]}

= form.inputs 'Paid Positions' do
  = form.input :paid, :label => 'This is a paid position'
  ~ form.input :paid_description, :as => :text, :input_html => {:rows => 3}, :hint => partial('admin/shared/markdown_reference'), :label => 'Describe the pay'

= form.inputs 'When should it be published?' do
  = form.input :published_at, :as => :datetime_picker, :label => 'Published after'
  = form.input :expires_at, :as => :datetime_picker, :label => 'Expired after'

= form.inputs 'About this Position' do
  ~ form.input :general_description, :as => :text, :input_html => {:rows => 8}, :hint => partial('admin/shared/markdown_reference'), :label => 'Position Background'
  ~ form.input :position_description, :as => :text, :input_html => {:rows => 8}, :hint => partial('admin/shared/markdown_reference'), :label => 'What would I be doing?'
  ~ form.input :applicant_description, :as => :text, :input_html => {:rows => 8}, :hint => partial('admin/shared/markdown_reference'), :label => 'Who should apply?'

= form.inputs 'Extra application questions' do
  - other_questions = Question.except_for(resource.question_ids)
  = form.input :next_question_id, :as => :select, :collection => other_questions.for_select, :label => 'Add question'

  %li.questions.required#position_position_questions_input
    %label{:for => "position_position_questions"} Questions:
    %ol#position-questions-list
      = form.fields_for :position_questions, resource.position_questions.ordered do |pqf|
        = partial 'question_form', pqf